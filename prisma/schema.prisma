generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Order {
  id         String   @id @default(cuid()) @map("_id")
  userId     String   
  locationId String
  price      Int      @default(5)
  location   Location @relation(fields: [locationId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  items      Item[]   @relation("ItemToOrder")
  destinationDorm     String   
  destinationRoom     String   
  phone     String   
}

model Location {
  id     String  @id @default(cuid()) @map("_id")
  name   String  @unique
  image  String?
  items  Item[]
  orders Order[]
}

model Item {
  id         String   @id @default(cuid()) @map("_id")
  name       String   @unique
  locationId String
  image      String?
  price      Int      @default(5)
  featured   Boolean  @default(false)
  location   Location @relation(fields: [locationId], references: [id])
  orders     Order[]  @relation("ItemToOrder")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  token_type        String
  provider          String
  scope             String
  providerAccountId String
  refreshToken      String?
  access_token      String?
  expires_at        Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  id_token          String?
  user              User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  password      String?
  dorm          String?
  phone         String?   @unique
  roomNumber    String?
  accounts      Account[]
  orders        Order[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
